// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using CoreGraphics;
using AudioToolbox;
using AVFoundation;

namespace DataVault
{
	public partial class PassCodeContinousController : UIViewController
	{
		public PassCodeContinousController (IntPtr handle) : base (handle)
		{
		}

		public PassCodeContinousController(){}

		public AppDelegate applicationDelegate { 
			get {
				return (AppDelegate)UIApplication.SharedApplication.Delegate; 			
			}
		}

		int incorrectCount = 0; 
		UITextField passwordTextField = new UITextField();

		public override void ViewWillLayoutSubviews()
		{
			if (UIDevice.CurrentDevice.UserInterfaceIdiom == UIUserInterfaceIdiom.Phone)
			{
				if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeLeft || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeRight)
				{
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 60.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
				else if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.Portrait || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.PortraitUpsideDown)
				{
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 80.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
			}
			else if (UIDevice.CurrentDevice.UserInterfaceIdiom == UIUserInterfaceIdiom.Pad)
			{
				if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeLeft || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeRight)
				{
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 80.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
				else if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.Portrait || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.PortraitUpsideDown)
				{
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 80.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
			}
		}


		//handles the event if the user entered the wrong password
		private void passwordIncorrect(string title, string message)
		{
			UIAlertController passwordIncController = UIAlertController.Create(title, message, UIAlertControllerStyle.Alert);

			UIAlertAction confirmed = UIAlertAction.Create("Ok", UIAlertActionStyle.Default, (UIAlertAction obj) =>
			{
				this.passwordTextField.Text = "";
				passwordIncController.Dispose();
			});
			passwordIncController.AddAction(confirmed);

			if (this.PresentedViewController == null)
			{
				this.PresentViewController(passwordIncController, true, () =>
				{
					SystemSound errorSound = new SystemSound(4095);
					errorSound.PlaySystemSound();
				});
			}
			else {
				this.PresentedViewController.DismissViewController(true, () =>
				{
					this.PresentedViewController.Dispose();
					this.PresentViewController(passwordIncController, true, () =>
					{
						SystemSound errorSound = new SystemSound(4095);
						errorSound.PlaySystemSound();
					});
				});
			}
		}

		public override void ViewDidLoad()
		{

			if (UIDevice.CurrentDevice.UserInterfaceIdiom == UIUserInterfaceIdiom.Phone)
			{
				if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeLeft || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeRight)
				{
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 60.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
				else if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.Portrait || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.PortraitUpsideDown)
				{
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 80.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
			}
			else if (UIDevice.CurrentDevice.UserInterfaceIdiom == UIUserInterfaceIdiom.Pad)
			{
				if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeLeft || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeRight)
				{
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 80.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
				else if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.Portrait || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.PortraitUpsideDown)
				{
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 80.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
			}



			this.passwordTextField.EditingChanged += (object sender, EventArgs e) => {
				SystemSound keyboardSound = new SystemSound(1105);
				keyboardSound.PlaySystemSound();
			};

			UIBarButtonItem confirmed = new UIBarButtonItem("Done", UIBarButtonItemStyle.Done, (sender, e) =>
			{
				var memoryCache = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);
				var filePathPassword = System.IO.Path.Combine(memoryCache, "password.txt");

				if(this.passwordTextField.Text != System.IO.File.ReadAllText(filePathPassword)) {
					//shared audio player must be set as a play and record setting

					this.incorrectCount++;
					if (this.incorrectCount <= 2)
					{
						passwordIncorrect("Incorrect password", "Your password is incorrect. Please try again");
					}
					else if (this.incorrectCount == 3)
					{
						this.incorrectCount = 0;
						this.passwordTextField.ResignFirstResponder();
						this.passwordTextField.Text = "\ud83d\udd12 LOCKED"; 
						passwordIncorrect("Diary is locked!", "Your diary is locked! You will have to wait 30 seconds for your diary to unlock again");
						SystemSound alertSound = new SystemSound(1005);
						if (this.PresentedViewController != null)
						{
							for (int i = 0; i <= 10000; i++)
							{
								alertSound.PlaySystemSound();
								this.passwordTextField.UserInteractionEnabled = false;
								this.passwordTextField.ResignFirstResponder();

								if (i >= 10000)
								{
									SystemSound unlockVault = new SystemSound(1101);
									unlockVault.PlaySystemSound();
									this.passwordTextField.Text = "";
									this.passwordTextField.UserInteractionEnabled = true;
									//passwordIncorrect("Vault is unlocked!", "You can now try to log in again");
							}
						}
						}
						else {
							Console.WriteLine("Controller is not yet presented");
						}
					}
				}
				else {
					VaultTabController vault = new VaultTabController();
					this.NavigationController.PushViewController(vault, true);
				}
			});

			this.passwordTextField.Placeholder = "Password";
			this.passwordTextField.ClearButtonMode = UITextFieldViewMode.Always; 
			this.passwordTextField.SecureTextEntry = true;
			this.applicationDelegate.password = this.passwordTextField.Text; 

			this.passwordTextField.SpellCheckingType = UITextSpellCheckingType.No;
			this.passwordTextField.AutocorrectionType = UITextAutocorrectionType.No;
			this.passwordTextField.AutocapitalizationType = UITextAutocapitalizationType.None; 
			this.passwordTextField.BorderStyle = UITextBorderStyle.RoundedRect;

			this.passwordTextField.Layer.BorderWidth = 0.2f;
			this.passwordTextField.Layer.BorderColor = UIColor.Black.CGColor;
			this.passwordTextField.Layer.CornerRadius = 0.2f; 

			this.View.BackgroundColor = UIColor.GroupTableViewBackgroundColor;

			this.NavigationItem.Title = "Enter your password";

			this.NavigationItem.SetRightBarButtonItem(confirmed, false);

			this.View.AddSubview(this.passwordTextField);
		}
	}
}
