// This file has been autogenerated from a class added in the UI designer.

using System;
using System.IO;

using Foundation;
using CoreGraphics;
using UIKit;
using AudioToolbox;

namespace DataVault
{
	public partial class PassCodeFirstTimeController : UIViewController
	{
		public PassCodeFirstTimeController (IntPtr handle) : base (handle)
		{
		}

		public PassCodeFirstTimeController() { }

		public AppDelegate applicationDelegate {
			get {
				return (AppDelegate)UIApplication.SharedApplication.Delegate;
			}
		}
		int incorrectCount = 0;
		UITextField passwordTextField = new UITextField();
		UITextField passwordConfirmField = new UITextField();



		public override void ViewWillLayoutSubviews()
		{
			if (UIDevice.CurrentDevice.UserInterfaceIdiom == UIUserInterfaceIdiom.Phone)
			{
				if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeLeft || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeRight)
				{
					this.passwordConfirmField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 140.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 60.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
				else if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.Portrait || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.PortraitUpsideDown)
				{
					this.passwordConfirmField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 160.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 80.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
			}
			else if (UIDevice.CurrentDevice.UserInterfaceIdiom == UIUserInterfaceIdiom.Pad)
			{
				if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeLeft || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeRight)
				{
					this.passwordConfirmField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 140.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 80.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
				else if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.Portrait || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.PortraitUpsideDown)
				{
					this.passwordConfirmField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 140.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 80.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
			}
		}

		private void passwordIncorrect(string title, string message) {
			UIAlertController passwordIncController = UIAlertController.Create(title, message, UIAlertControllerStyle.Alert); 

			UIAlertAction confirmed = UIAlertAction.Create("Ok", UIAlertActionStyle.Default, (UIAlertAction obj) => {
				this.passwordTextField.Text = "";
				this.passwordConfirmField.Text = "";
				passwordIncController.Dispose(); 
			});
			passwordIncController.AddAction(confirmed);

			if(this.PresentedViewController == null) {
				this.PresentViewController(passwordIncController, true, () =>
				{
					SystemSound errorSound = new SystemSound(4095);
					errorSound.PlaySystemSound();
				});
			}
			else {
				this.PresentedViewController.DismissViewController(true, () =>
				{
					this.PresentedViewController.Dispose();
					this.PresentViewController(passwordIncController, true, () =>
					{
						SystemSound errorSound = new SystemSound(4095);
						errorSound.PlaySystemSound();
					});
				});
			}
		}

		public override void ViewDidLoad()
		{

			this.passwordTextField.BorderStyle = UITextBorderStyle.RoundedRect;

			//password confirm properties 

			this.passwordConfirmField.BorderStyle = UITextBorderStyle.RoundedRect;

			this.passwordTextField.Placeholder = "Enter password";
			this.passwordConfirmField.Placeholder = "Confirm password";

			this.passwordTextField.ReturnKeyType = UIReturnKeyType.Done;
			this.passwordConfirmField.ReturnKeyType = UIReturnKeyType.Done;

			this.passwordTextField.SpellCheckingType = UITextSpellCheckingType.No;
			this.passwordTextField.AutocorrectionType = UITextAutocorrectionType.No; 
			this.passwordTextField.AutocapitalizationType = UITextAutocapitalizationType.None;

			this.passwordConfirmField.SpellCheckingType = UITextSpellCheckingType.No;
			this.passwordConfirmField.AutocorrectionType = UITextAutocorrectionType.No;
			this.passwordConfirmField.AutocapitalizationType = UITextAutocapitalizationType.None;

			if (UIDevice.CurrentDevice.UserInterfaceIdiom == UIUserInterfaceIdiom.Phone)
			{
				if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeLeft || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeRight)
				{
					this.passwordConfirmField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 140.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 60.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
				else if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.Portrait || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.PortraitUpsideDown)
				{
					this.passwordConfirmField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 160.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 80.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
			}
			else if (UIDevice.CurrentDevice.UserInterfaceIdiom == UIUserInterfaceIdiom.Pad)
			{
				if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeLeft || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.LandscapeRight)
				{
					this.passwordConfirmField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 140.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 80.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
				else if (UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.Portrait || UIDevice.CurrentDevice.Orientation == UIDeviceOrientation.PortraitUpsideDown)
				{
					this.passwordConfirmField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 140.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
					this.passwordTextField.Frame = new CGRect(this.View.Bounds.Left + 5, this.View.Bounds.Top + 80.0f, UIScreen.MainScreen.Bounds.Width - 10.0f, 50);
				}
			}

			this.passwordTextField.EditingChanged += (object sender, EventArgs e) => {
				SystemSound keyboardSound = new SystemSound(1105);
				keyboardSound.PlaySystemSound();
			};

			this.passwordTextField.EditingDidEnd += (object sender, EventArgs e) => {
				if (this.passwordTextField.Text.Length < 6)
				{
					passwordIncorrect("Password must be longer", "To make your password more secure please enter at least 6 characters");
				}
			};

			this.passwordConfirmField.EditingChanged += (object sender, EventArgs e) => {
				SystemSound keyboardSound = new SystemSound(1105);
				keyboardSound.PlaySystemSound();
			};

			this.passwordConfirmField.ShouldReturn += (UITextField textField) => {
				this.passwordConfirmField.ResignFirstResponder(); 
				return true;
			};

			this.passwordTextField.ShouldReturn += (UITextField textField) =>
			{
				this.passwordTextField.ResignFirstResponder();
				return true;
			};

			this.passwordTextField.SecureTextEntry = true;
			this.passwordConfirmField.SecureTextEntry = true;

			this.View.BackgroundColor = UIColor.GroupTableViewBackgroundColor;

			UIBarButtonItem confirmed = new UIBarButtonItem("Done", UIBarButtonItemStyle.Done, (sender, e) =>
			{
				VaultTabController tab = new VaultTabController();

				if(this.passwordTextField.Text != this.passwordConfirmField.Text) {
					passwordIncorrect("Passwords do not match", "Your chosen password does not match the confirmed password. Please enter them again and make sure they are equal");
				}
				else {
					if (String.IsNullOrEmpty(this.passwordTextField.Text) == true && String.IsNullOrEmpty(this.passwordConfirmField.Text) == true)
					{
						passwordIncorrect("Passwords cannot be empty", "Please enter a password and choose something with at least two digits, two characters and at least one capital letter. This will make your password harder to crack");
					}
					else {
						Console.WriteLine("Password entered correctly");

						var memoryCache = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData); 
						this.applicationDelegate.password = this.passwordTextField.Text;
						var filePathPassword = Path.Combine(memoryCache, "password.txt");
						File.WriteAllText(filePathPassword, this.passwordTextField.Text);

						this.NavigationController.PushViewController(tab, true);
					}
				}
			});

			UIBarButtonItem denied = new UIBarButtonItem(UIBarButtonSystemItem.Refresh, (sender, e) =>
			{
				passwordTextField.Text = "";
				passwordConfirmField.Text = ""; 
			});

			this.NavigationItem.SetRightBarButtonItem(confirmed, false);
			this.NavigationItem.SetLeftBarButtonItem(denied, false);

			this.NavigationItem.Title = "Choose your password";

			this.View.AddSubview(this.passwordTextField);
			this.View.AddSubview(this.passwordConfirmField);
		}
	}
}
